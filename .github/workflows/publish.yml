name: Publish

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: https://registry.npmjs.org

      - name: Install dependencies
        run: bun install

      - name: Build packages
        run: bun run build

      - name: Get version info
        id: version
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

          # Determinar npm tag
          if [[ "$TAG" == *"-canary"* ]]; then
            echo "npm_tag=canary" >> $GITHUB_OUTPUT
          else
            echo "npm_tag=latest" >> $GITHUB_OUTPUT
          fi

      - name: Find packages to publish
        id: packages
        run: |
          VERSION=${{ steps.version.outputs.version }}
          PKGS=()
          for pkg in Packages/*; do
            if [ -f "$pkg/package.json" ]; then
              PKG_VERSION=$(jq -r .version "$pkg/package.json")
              if [ "$PKG_VERSION" = "$VERSION" ]; then
                PKGS+=("$pkg")
              fi
            fi
          done
          if [ ${#PKGS[@]} -eq 0 ]; then
            echo "::error ::No packages found with version $VERSION"
            exit 1
          fi
          echo "packages=${PKGS[*]}" >> $GITHUB_OUTPUT

      - name: Publish to npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          for pkg in ${{ steps.packages.outputs.packages }}; do
            echo "ðŸ“¦ Publishing $pkg"
            npm publish "$pkg" --tag ${{ steps.version.outputs.npm_tag }} --access public
          done